!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).GitHubClient=e()}(this,(function(){"use strict";class t{constructor(t){this.client=t}listPullRequests(t){const{full_name:e,...o}=t,s={...o,uri:this.client.buildURL(`/repos/${e}/pulls`),method:"GET"};return this.client.makeRequest(s)}async listAllPullRequest({options:t,projection:e,selection:o,breakFn:s,prs:i=[]}){const n=await this.listPullRequests(t);let r=_(n).value();if(o&&"function"==typeof o&&(r=r.filter(t=>o(t))),e&&"function"==typeof e&&(r=r.map(t=>e(t))),i.push(...r),s&&"function"==typeof o&&s(n)||n.length<=0)return i;{const{qs:n,...r}=t,{page:u=1}=n;return await this.listAllPullRequest({options:{...r,qs:{...n,page:u+1}},projection:e,selection:o,breakFn:s,prs:i})}}getComments(t){const{full_name:e,number:o,...s}=t,i={...s,uri:this.client.buildURL(`/repos/${e}/pulls/${o}/comments`),method:"GET"};return this.client.makeRequest(i)}getDetails(t){const{full_name:e,number:o,...s}=t,i={...s,uri:this.client.buildURL(`/repos/${e}/pulls/${o}`),method:"GET"};return this.client.makeRequest(i)}}return class{constructor(e){if(!e.host)throw new Error("NO_HOST_ERROR");if(!e.token)throw new Error("NO_TOKEN_ERROR");this.host=e.host,this.port=e.port,this.token=e.token,this.protocol=e.protocol||"https",this.apiVersion=e.apiVersion||"v3",this.path_prefix=e.path_prefix?e.path_prefix:"/",this.promise=e.promise||Promise,this.repository=new t(this)}buildURL(t,e){const o=this.path_prefix+"api/"+(e||this.apiVersion)+t,{protocol:s,host:i}=this;return decodeURIComponent(`${s}://${i}${o}`)}async makeRequest(t){const e={method:t.method||"GET",headers:{Authorization:"token "+this.token,...t.headers},uri:t.uri};if(t.qs){const o=Object.keys(t.qs).map(e=>encodeURIComponent(e)+"="+encodeURIComponent(t.qs[e])).join("&");e.uri=`${t.uri}?${o}`}t.body&&(e.body=JSON.stringify(t.body));const{uri:o,...s}=e;try{const t=await fetch(o,s),e=await t.json();return Promise.resolve(e)}catch(t){return Promise.reject(t)}}}}));
